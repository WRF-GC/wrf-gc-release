#------------------------------------------------------------------------------
#                  GEOS-Chem Global Chemical Transport Model                  #
#------------------------------------------------------------------------------
#BOP
#
# !MODULE: nc_definitions.rc
#
# !DESCRIPTION: Resource file that defines the netCDF filename, variables,
#  and attributes for use with the ncCode* scripts.  Also defines the names
#  of the files where Fortran code will be written to.
#\\
#\\
# !REMARKS:
#  In the FILENAME section:
#  ---------------------------------------------------------------------------
#  Fortran Def File   : Output file (generated by ncCodeDef) containing the
#                        Fortran calls to define the netCDF vars and atts
#  Fortran Write File : Output file (generated by ncCodeWrite) containing the
#                        Fortran calls to write data to the netCDF file
#  Fortran Read File  : Output file (generated by ncCodeRead) containing the
#                        Fortran calls to read data from the netCDF file
#  netCDF FileHandle  : netCDF file ID variable (usually fId or nc_id)
#  netCDF FileName    : Name of the netCDF file that the Fortran code will
#                        write to and read from
#                                                                             .
#  In the GLOBAL ATTRIBUTES section:
#  ----------------------------------------------------------------------------
#  Global attributes are specified with a declaration such as:
#                                                                             .
#    title = netCDF file to contain XYZ data
#                                                                             .
#  Where the name and value of each attribute is separated by an equals sign.
#
#  In the DIMENSIONS section:
#  ----------------------------------------------------------------------------
#  netCDF dimensions are specified with declarations such as:
#                                                                             .
#     lon  = 72
#     lat  = 46
#     lev  = 72
#     time = 1
#                                                                             .
#  Each dimension of your Fortran data arrays must have a corresponding
#  netCDF dimension.  We recommend using lon, lat, lev/press/alt, and
#  time as standard dimension names.
#                                                                             .
#  In the VARIABLES section:
#  ----------------------------------------------------------------------------
#  You may separate variables from each other for clarity with a "#" or "#-"
#  comment.
#                                                                             .
#  netCDF variables are specified with a declaration such as:
#                                                                             .
#    PS = REAL*4::lon,lat,time
#                                                                             .
#  where the variable name is to the left of the equals sign.  The variable
#  type (in this case, REAL*4) and the variable dimensions are to the right
#  of the equals sign, separated by the a double colon "::".
#                                                                             .
#  netCDF variable attributes are specified by a declaration such as:
#                                                                             .
#    PS:long_name = Surface pressure
#                                                                             .
#  where the variable name and attribute name are to the left of the equals
#  sign and separated from each other by a single colon ":".
#                                                                             .
#  Guidelines for COARDS compliance:
#  ----------------------------------------------------------------------------
#  (1 ) Index array variables must have the same name as the netCDF dimensions
#        that are used to declare them.
#  (2 ) Index array data should be monotonically increasing (i.e. longitude
#        from -180 to 180 or 0 to 360, latitude from -90 to 90, etc.).
#  (3 ) All variables should have "long_name" and "units" attributes.
#  (4 ) Dimension and attribute names should be in lower case.
#  (5 ) Longitude should have units of "degrees_east".
#  (6 ) Latitude should have units of "degrees north".
#  (6 ) All variables should have a "time" dimension, even if there is only
#        one time value.
#  (7 ) The "time" dimension should have units of
#        "hours since YYYY-MM-DD hh:mm:ss.s GMT", or
#        "minutes since YYYY-MM-DD hh:mm:ss.s GMT"
#  (8 ) To specify a 3 hour timestep, for example, the "delta_t" attribute of
#       "time" variable should have the value  "0000-00-00 03:00:00", etc.
#
#  Also, for compatibility with the GAMAP visualization package, please add
#  the "gamap_category" attribute to each variable.
#
# !REVISION HISTORY:
#  27 Jan 2012 - R. Yantosca - Initial version
#------------------------------------------------------------------------------

### !FILENAME:
Fortran Def File    = nc_define.F
Fortran Write File  = nc_write.F
Fortran Read File   = nc_read.F
netCDF FileHandle   = fId
netCDF FileName     = GEOSCHEM.nc


### !GLOBAL ATTRIBUTES:
title               = Generated by ncCodeCreate script
history             = 27 Jan 2011
conventions         = COARDS
format              = netCDF-3
model               = GEOS5
nlayers             = 72
start_date          = 20110101
start_time          = 00:00:00.0
end_date            = 20110101
end_time            = 23:59:59.0
delta_lon           = 5
delta_lat           = 4
delta_time          = 000000


### !DIMENSIONS:
lon                 = 72
lat                 = 46
lev                 = 72
time                = 1


### !VARIABLES:
lon                 = REAL*4::lon
lon:long_name       = longitude
lon:units           = degrees_east
#-
lat                 = REAL*4::lat
lat:long_name       = latitude
lat:units           = degrees_north
#-
lev                 = REAL*4::lev
lev:long_name       = levels
lev:units           = unitless
#-
time                = INTEGER::time
time:long_name      = time
time:units          = minutes from 2011-01-01 00:00:00 GMT
time:delta_t        = 0000-00-00 00:00:00
time:begin_date     = 20110101
time:begin_time     = 000000
time:time_increment = 000000
#-
PS                  = REAL*4::lon,lat,time
PS:long_name        = Surface pressure
PS:units            = hPa
PS:gamap_category   = GMAO-2D
#-
T                   = REAL*4::lon,lat,lev,time
T:long_name         = Temperature
T:units             = K
T:gamap_category    = GMAO-3D$

#EOP
