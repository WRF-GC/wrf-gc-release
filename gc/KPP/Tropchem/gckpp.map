! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
! 
! Map File with Human-Readable Information
! 
! Generated by KPP-2.2.4_gc symbolic chemistry Kinetics PreProcessor
!       (http://www.cs.vt.edu/~asandu/Software/KPP)
! KPP is distributed under GPL, the general public licence
!       (http://www.gnu.org/copyleft/gpl.html)
! (C) 1995-1997, V. Damian & A. Sandu, CGRER, Univ. Iowa
! (C) 1997-2005, A. Sandu, Michigan Tech, Virginia Tech
!     With important contributions from:
!        M. Damian, Villanova University, USA
!        R. Sander, Max-Planck Institute for Chemistry, Mainz, Germany
! 
! File                 : gckpp.map
! Time                 : Fri Mar 13 14:32:03 2020
! Working directory    : /n/home05/msulprizio/GC/Code.GCHP/KPP/Tropchem
! Equation file        : gckpp.kpp
! Output root filename : gckpp
! 
! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



### Options -------------------------------------------

FUNCTION - AGGREGATE
JACOBIAN - SPARSE W/ ACCOUNT FOR LU DECOMPOSITION FILL-IN
DOUBLE   - ON
REORDER  - ON

### Parameters ----------------------------------------

! NSPEC - Number of chemical species
  INTEGER, PARAMETER :: NSPEC = 241 
! NVAR - Number of Variable species
  INTEGER, PARAMETER :: NVAR = 236 
! NVARACT - Number of Active species
  INTEGER, PARAMETER :: NVARACT = 209 
! NFIX - Number of Fixed species
  INTEGER, PARAMETER :: NFIX = 5 
! NREACT - Number of reactions
  INTEGER, PARAMETER :: NREACT = 745 
! NVARST - Starting of variables in conc. vect.
  INTEGER, PARAMETER :: NVARST = 1 
! NFIXST - Starting of fixed in conc. vect.
  INTEGER, PARAMETER :: NFIXST = 237 

### Species -------------------------------------------

Variable species
  1 = CH2I2 (r)  80 = IDC (r)   159 = PROPNN (r)
  2 = CH2IBr (r) 81 = OClO (r)  160 = HCOOH (r) 
  3 = CH2ICl (r) 82 = ETP (r)   161 = MCRHN (r) 
  4 = NIT (r)    83 = ALK4 (r)  162 = MONITU (r)
  5 = NITs (r)   84 = PP (r)    163 = R4N2 (r)  
  6 = AERI (n)   85 = PRPN (r)  164 = MVKOHOO (r)
  7 = CO2 (n)    86 = IEPOXD (r)165 = MCROHOO (r)
  8 = INDIOL (n) 87 = MVKDH (r) 166 = ICPDH (r) 
  9 = ISALA (n)  88 = HOI (r)   167 = PRN1 (r)  
 10 = ISALC (n)  89 = PIP (r)   168 = ETHLN (r) 
 11 = LBRO2H (n) 90 = HPALD1OO (r)169 = CH3CHOO (r)
 12 = LBRO2N (n) 91 = HPALD2OO (r)170 = MACR1OO (r)
 13 = LISOPOH (n) 92 = BrCl (r)  171 = I (r)     
 14 = LISOPNO3 (n) 93 = N2O5 (r)  172 = ClNO3 (r) 
 15 = LTRO2H (n) 94 = C3H8 (r)  173 = PO2 (r)   
 16 = LTRO2N (n) 95 = INA (r)   174 = IO (r)    
 17 = LVOCOA (n) 96 = MP (r)    175 = ETO2 (r)  
 18 = LVOC (r)   97 = IDCHP (r) 176 = ITCN (r)  
 19 = LXRO2H (n) 98 = Cl2 (r)   177 = IHN4 (r)  
 20 = LXRO2N (n) 99 = SO2 (r)   178 = BrO (r)   
 21 = MSA (n)   100 = HPALD3 (r)179 = GLYX (r)  
 22 = SO4 (n)   101 = Br2 (r)   180 = IHPNBOO (r)
 23 = SO4H1 (n) 102 = HPALD4 (r)181 = ACET (r)  
 24 = SO4H2 (n) 103 = MCRDH (r) 182 = MOH (r)   
 25 = SOAGX (n) 104 = IEPOXA (r)183 = ISOP (r)  
 26 = SOAIE (n) 105 = HONIT (r) 184 = OLNN (r)  
 27 = POx (n)   106 = IEPOXB (r)185 = OLND (r)  
 28 = LOx (n)   107 = EOH (r)   186 = IHN1 (r)  
 29 = PCO (n)   108 = MACR1OOH (r)187 = HNO3 (r)  
 30 = LCO (n)   109 = BrSALC (r)188 = LIMO2 (r) 
 31 = PSO4 (n)  110 = BrSALA (r)189 = MEK (r)   
 32 = LCH4 (n)  111 = IHN2 (r)  190 = CH2OO (r) 
 33 = PH2O2 (n) 112 = IHN3 (r)  191 = IEPOXAOO (r)
 34 = I2O4 (r)  113 = IDHDP (r) 192 = IEPOXBOO (r)
 35 = CHBr3 (r) 114 = C4HVP1 (r)193 = MCRHP (r) 
 36 = CH2Br2 (r)115 = C4HVP2 (r)194 = MVKHP (r) 
 37 = I2O2 (r)  116 = IDNOO (r) 195 = IDHNBOO (r)
 38 = MONITA (r)117 = C2H6 (r)  196 = RCHO (r)  
 39 = BENZ (r)  118 = ICNOO (r) 197 = GLYC (r)  
 40 = CH3I (r)  119 = ISOPNOO2 (r)198 = MGLY (r)  
 41 = I2O3 (r)  120 = MPAN (r)  199 = R4N1 (r)  
 42 = PPN (r)   121 = MTPA (r)  200 = HBr (r)   
 43 = TOLU (r)  122 = MTPO (r)  201 = MVKN (r)  
 44 = BrNO2 (r) 123 = MVKPC (r) 202 = ICN (r)   
 45 = CH3Br (r) 124 = RIPA (r)  203 = ITHN (r)  
 46 = HI (r)    125 = ROH (r)   204 = IDN (r)   
 47 = IBr (r)   126 = INPD (r)  205 = IHOO1 (r) 
 48 = INO (r)   127 = BrNO3 (r) 206 = IHOO4 (r) 
 49 = TRO2 (r)  128 = RIPB (r)  207 = MVK (r)   
 50 = BRO2 (r)  129 = MCRENOL (r)208 = PIO2 (r)  
 51 = HMHP (r)  130 = IONO2 (r) 209 = MACRNO2 (r)
 52 = PAN (r)   131 = H2O2 (r)  210 = HAC (r)   
 53 = XRO2 (r)  132 = IDHPE (r) 211 = MACR (r)  
 54 = MAP (r)   133 = RIPD (r)  212 = INO2D (r) 
 55 = CHCl3 (r) 134 = IDHNDOO2 (r)213 = INO2B (r) 
 56 = ICl (r)   135 = ISOPNOO1 (r)214 = ATO2 (r)  
 57 = Cl2O2 (r) 136 = IDHNDOO1 (r)215 = KO2 (r)   
 58 = MPN (r)   137 = MVKHC (r) 216 = R4O2 (r)  
 59 = CH2Cl2 (r)138 = RIPC (r)  217 = OTHRO2 (r)
 60 = HMML (r)  139 = HPETHNL (r)218 = HCl (r)   
 61 = HNO2 (r)  140 = I2 (r)    219 = PRPE (r)  
 62 = HNO4 (r)  141 = LIMO (r)  220 = CH2O (r)  
 63 = ETNO3 (r) 142 = ICHE (r)  221 = ClO (r)   
 64 = IPRNO3 (r)143 = MCRHNB (r)222 = CO (r)    
 65 = MENO3 (r) 144 = MONITS (r)223 = ALD2 (r)  
 66 = NPRNO3 (r)145 = INPB (r)  224 = NO2 (r)   
 67 = OIO (r)   146 = IHPOO1 (r)225 = MCO3 (r)  
 68 = R4P (r)   147 = IHPOO2 (r)226 = Cl (r)    
 69 = RA3P (r)  148 = MVKHCB (r)227 = NO3 (r)   
 70 = RB3P (r)  149 = IHPOO3 (r)228 = A3O2 (r)  
 71 = RP (r)    150 = HPALD1 (r)229 = B3O2 (r)  
 72 = XYLE (r)  151 = HPALD2 (r)230 = OH (r)    
 73 = ClNO2 (r) 152 = ATOOH (r) 231 = HO2 (r)   
 74 = DMS (r)   153 = HC5A (r)  232 = Br (r)    
 75 = CH3Cl (r) 154 = IHPNDOO (r)233 = O3 (r)    
 76 = IONITA (r)155 = ACTA (r)  234 = NO (r)    
 77 = IONO (r)  156 = ICHOO (r) 235 = RCO3 (r)  
 78 = ClOO (r)  157 = HOCl (r)  236 = MO2 (r)   
 79 = PYAC (r)  158 = HOBr (r)  

Fixed species
  1 = CH4 (r)     3 = H2O (r)     5 = RCOOH (n) 
  2 = H2 (r)      4 = O2 (r)    

### Subroutines ---------------------------------------

SUBROUTINE Fun ( V, F, RCT, Vdot )
SUBROUTINE Jac_SP ( V, F, RCT, JVS )
SUBROUTINE Jac_SP_Vec ( JVS, UV, JUV )
SUBROUTINE JacTR_SP_Vec ( JVS, UV, JTUV )
SUBROUTINE KppSolve ( JVS, X )
SUBROUTINE KppSolveTR ( JVS, X, XX )
SUBROUTINE Initialize ( )
SUBROUTINE Shuffle_user2kpp ( V_USER, V )
SUBROUTINE Shuffle_kpp2user ( V, V_USER )
SUBROUTINE Update_RCONST ( )
SUBROUTINE Update_PHOTO ( )
SUBROUTINE GetMass ( CL, Mass )
